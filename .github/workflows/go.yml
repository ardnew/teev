# Triggered on every push or pull request event to any branch.
name: main

run-name: ${{ github.event_name }} to ${{ github.ref_name }} by @${{ github.actor }}

on: 
  - push
  - pull_request

defaults:
  run: { shell: bash }

jobs:
  # Run `go list` to resolve the module's declared Go language
  # version and store the result in ${{ outputs.language }}.
  #
  # Run `go version` to resolve the Go toolchain version
  # bundled with the `go` command being used and store the
  # result in ${{ outputs.toolchain }}.
  #
  #   | See the following for details on Go versions:
  #   |   https://tip.golang.org/doc/toolchain  
  #
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with: { go-version-file: go.mod }
      - id: language
        run: |
          go list -m -f 'version={{.GoVersion}}' | cut -sd. -f-2 >> "${GITHUB_OUTPUT}"
      - id: toolchain
        run: |
          version=$( GOTOOLCHAIN=local go version | cut -sd' ' -f3 | cut -c3- )
          echo "version=${version}" >> "${GITHUB_OUTPUT}"
    outputs:
      language: ${{ steps.language.outputs.version }}
      toolchain: ${{ steps.toolchain.outputs.version }}

  # Run all tests in all packages, and record coverages,
  # on latest versions of Ubuntu, macOS, and Windows
  # using local module version and other notable releases.
  build:
    needs: 
      - version
    strategy:
      matrix:
        os: 
          - ubuntu
          - macos
          - windows
        go: 
          - '1.21'
          - "${{ needs.version.outputs.language }}"
          - "${{ needs.version.outputs.language }}.x"
        include:
          - version: latest

    env:
      coverprofile: go${{ matrix.go }}-${{ matrix.os }}-${{ matrix.version }}.coverage.out
      testresults: go${{ matrix.go }}-${{ matrix.os }}-${{ matrix.version }}.testresults.json

    name: Go ${{ matrix.go }} (${{ matrix.os }}-${{ matrix.version }})
    runs-on: ${{ matrix.os }}-${{ matrix.version }}

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with: { go-version: "${{ matrix.go }}" }

      - name: get-dependencies
        run: |
          go get -v .

      - name: test-with-coverage
        run: |
          go test -json -covermode=count -coverprofile="${coverprofile}" > "${testresults}"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.coverprofile }}
          path: ${{ env.coverprofile }}
          
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.testresults }}
          path: ${{ env.testresults }}
